// [WARNING] This file is generated by running `$ qore codegen` on your root project, please do not edit

/// <reference types="@feedloop/qore-client" />
import { QoreSchema } from "@feedloop/qore-client";

declare module "@feedloop/qore-client" {
  type MemberTableRow = {
    id: string;
    email: string;
    role: { id: string; displayField: string };
  };

  type MenuTableRow = {
    id: string;
    name: string;
    imageUrl: string;
    price: number;
    category: CategoryTableRow;
    branch: { nodes: BranchTableRow[] };
  };

  type BranchTableRow = {
    id: string;
    name: string;
    city: CityTableRow;
    menu: { nodes: MenuTableRow[] };
  };

  type CityTableRow = {
    id: string;
    name: string;
    branch: { nodes: BranchTableRow[] };
  };

  type CategoryTableRow = {
    id: string;
    name: string;
    menu: { nodes: MenuTableRow[] };
  };

  type AllMemberViewRow = {
    read: {
      id: string;
      email: string;
      role: { id: string; displayField: string };
    };
    write: {
      email: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllMenuViewRow = {
    read: {
      id: string;
      name: string;
      price: number;
      imageUrl: string;
      category: CategoryTableRow;
      branch: { nodes: BranchTableRow[] };
    };
    write: {
      name: string;
      price: number;
      imageUrl: string;
      category: string[];
      branch: string[];
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllBranchViewRow = {
    read: {
      id: string;
      name: string;
      city: CityTableRow;
      menu: { nodes: MenuTableRow[] };
    };
    write: {
      name: string;
      city: string[];
      menu: string[];
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllCategoryViewRow = {
    read: {
      id: string;
      name: string;
      menu: { nodes: MenuTableRow[] };
    };
    write: {
      name: string;
      menu: string[];
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllCityViewRow = {
    read: {
      id: string;
      name: string;
      branch: { nodes: BranchTableRow[] };
    };
    write: {
      name: string;
      branch: string[];
    };
    params: {};
    actions: {};
    forms: {};
  };

  type ProjectSchema = {
    allMember: AllMemberViewRow;
    allMenu: AllMenuViewRow;
    allBranch: AllBranchViewRow;
    allCategory: AllCategoryViewRow;
    allCity: AllCityViewRow;
  };
}
